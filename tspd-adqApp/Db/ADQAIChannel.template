##
## Copyright (c) 2018 Cosylab d.d.
## This software is distributed under the terms found
## in file LICENSE.txt that is included with this distribution.
##

# # # # # # # # # # # # # # # # # # # # # #
#           ADQAIChannel class            #
# # # # # # # # # # # # # # # # # # # # # #

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#       Parameters and data records       #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(ao, "$(P):${CH}:INPUTRANGE") {
    field(DESC, "${CH} input range")
    field(EGU,  "mVpp")
    field(SCAN, "Passive")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT):$(GRP), 0)${CH}-InputRange")
    field(PINI, "YES")
}

record(ai, "$(P):${CH}:INPUTRANGE-RB") {
    field(DESC, "${CH} input range Rdbk")
    field(EGU,  "mVpp")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT):$(GRP), 0)${CH}-InputRange-RB")
}

record(bo, "$(P):${CH}:INPUTIMPEDANCE") {
    field(DESC, "${CH} Input Impedance")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT):$(GRP), 0)${CH}-InputImpedance")
    field(ZNAM, "50 Ohm")
    field(ONAM, "1 MOhm")
    field(PINI, "YES")
}

record(bi, "$(P):${CH}:INPUTIMPEDANCE-RB") {
    field(DESC, "${CH} Input Impedance Rdbk")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT):$(GRP), 0)${CH}-InputImpedance-RB")
    field(ZNAM, "50 Ohm")
    field(ONAM, "1 MOhm")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "$(P):${CH}:DCBIAS") {
    field(DESC, "${CH} Adjusted BIAS")
    field(SCAN, "Passive")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT):$(GRP), 0)${CH}-DCBias")
    field(PINI, "YES")
}

record(longin, "$(P):${CH}:DCBIAS-RB") {
    field(DESC, "${CH} Adjusted BIAS Rdbk")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT):$(GRP), 0)${CH}-DCBias-RB")
    field(PINI, "YES")
}

record(longout, "$(P):${CH}:CHANDEC") {
    field(DESC, "${CH} decimation (for ADQ7-FWSDR)")
    field(SCAN, "Passive")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT):$(GRP), 0) ${CH}-ChanDec")
    field(PINI, "YES")
}

record(longin, "$(P):${CH}:CHANDEC-RB") {
    field(DESC, "${CH} decimation (for ADQ7-FWSDR) Rdbk")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT):$(GRP), 0) ${CH}-ChanDec-RB")
    field(PINI, "YES")
}

record(waveform, "$(P):${CH}:DATA") {
    field(DESC, "Received data")
    field(FTVL, "SHORT")
    # This is the maximum number samples in a record * NRECORDSCOLLECT
    field(NELM, "${NSAMPLES=100000}")
    field(PRIO, "HIGH")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt16ArrayIn")
    field(INP,  "@asyn($(PORT):$(GRP), 0)${CH}-Data")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#       StateMachine for Channels         #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(mbbo, "$(P):${CH}:SETSTATE") {
    field(DESC, "Set local state ${CH}")
    field(SCAN, "Passive")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT):$(GRP), 0)${CH}-StateMachine-setState")
    field(PINI, "YES")
}

record(mbbi, "$(P):${CH}:GETSTATE") {
    field(DESC, "Get local state ${CH}")
    field(SCAN, "I/O Intr")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
    field(EISV, "MAJOR")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT):$(GRP), 0)${CH}-StateMachine-getState")
    field(PINI, "YES")
}
